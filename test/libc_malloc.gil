import "unops_common.gil", "binops_common.gil", "internals.gil", "cheri_purecap_compressed.gil", "cheri_purecap_uncompressed.gil", "stdlib_cap256.gil", "string_common.gil";

(* void ( void *, unsigned long int ) *)
proc check_allocation(a, size) {
        retval_i__cheri_tag_get_1 := undefined; (* _Bool retval_i__cheri_tag_get_1; *)
        retval_i__cheri_tag_get_1 := "i__cheri_tag_get"(a);
        tmp_0 := "i__unops_cast"("signed int", retval_i__cheri_tag_get_1);
        tmp_1 := "i__unops_cast"("_Bool", tmp_0);
        assert (tmp_1 == {{ "int32", 1i }});
        tmp_2 := "i__unops_cast"("signed int", retval_i__cheri_tag_get_1);
        tmp_3 := "i__unops_cast"("_Bool", tmp_2);
        tmp_4 := "i__unops_negb"(tmp_3);
        vtb := "i__bool_of_value"(tmp_4);
        goto [vtb] t1 s1;
    s1: skip;
    t1: retval_i__cheri_length_get_2 := undefined; (* unsigned long int retval_i__cheri_length_get_2; *)
        retval_i__cheri_length_get_2 := "i__cheri_length_get"(a);
        retval_i__cheri_offset_get_3 := undefined; (* unsigned long int retval_i__cheri_offset_get_3; *)
        retval_i__cheri_offset_get_3 := "i__cheri_offset_get"(a);
        tmp_5 := "i__binops_sub"(retval_i__cheri_length_get_2, retval_i__cheri_offset_get_3);
        tmp_6 := "i__binops_cmp_geq"(tmp_5, size);
        assert (tmp_6 == {{ "int32", 1i }});
        tmp_7 := "i__binops_sub"(retval_i__cheri_length_get_2, retval_i__cheri_offset_get_3);
        tmp_8 := "i__binops_cmp_geq"(tmp_7, size);
        tmp_9 := "i__unops_negb"(tmp_8);
        vtb := "i__bool_of_value"(tmp_9);
        goto [vtb] t2 s2;
    s2: skip;
    t2: retval_i__builtin_cheri_perms_get_4 := undefined; (* signed int retval_i__builtin_cheri_perms_get_4; *)
        retval_i__builtin_cheri_perms_get_4 := "i__builtin_cheri_perms_get"(a, {{ "int32", 3i }});
        tmp_10 := "i__unops_cast"("_Bool", retval_i__builtin_cheri_perms_get_4);
        assert (tmp_10 == {{ "int32", 1i }});
        tmp_11 := "i__unops_cast"("_Bool", retval_i__builtin_cheri_perms_get_4);
        tmp_12 := "i__unops_negb"(tmp_11);
        vtb := "i__bool_of_value"(tmp_12);
        goto [vtb] t3 s3;
    s3: skip;
    t3: retval_i__builtin_cheri_perms_get_5 := undefined; (* signed int retval_i__builtin_cheri_perms_get_5; *)
        retval_i__builtin_cheri_perms_get_5 := "i__builtin_cheri_perms_get"(a, {{ "int32", 1i }});
        tmp_13 := "i__unops_cast"("_Bool", retval_i__builtin_cheri_perms_get_5);
        assert (tmp_13 == {{ "int32", 1i }});
        tmp_14 := "i__unops_cast"("_Bool", retval_i__builtin_cheri_perms_get_5);
        tmp_15 := "i__unops_negb"(tmp_14);
        vtb := "i__bool_of_value"(tmp_15);
        goto [vtb] t4 s4;
    s4: skip;
    t4: retval_i__builtin_cheri_perms_get_6 := undefined; (* signed int retval_i__builtin_cheri_perms_get_6; *)
        retval_i__builtin_cheri_perms_get_6 := "i__builtin_cheri_perms_get"(a, {{ "int32", 2i }});
        tmp_16 := "i__unops_cast"("_Bool", retval_i__builtin_cheri_perms_get_6);
        assert (tmp_16 == {{ "int32", 1i }});
        tmp_17 := "i__unops_cast"("_Bool", retval_i__builtin_cheri_perms_get_6);
        tmp_18 := "i__unops_negb"(tmp_17);
        vtb := "i__bool_of_value"(tmp_18);
        goto [vtb] t5 s5;
    s5: skip;
    t5: retval_i__builtin_cheri_perms_get_7 := undefined; (* signed int retval_i__builtin_cheri_perms_get_7; *)
        retval_i__builtin_cheri_perms_get_7 := "i__builtin_cheri_perms_get"(a, {{ "int32", 0i }});
        tmp_19 := "i__unops_cast"("_Bool", retval_i__builtin_cheri_perms_get_7);
        assert (tmp_19 == {{ "int32", 1i }});
        tmp_20 := "i__unops_cast"("_Bool", retval_i__builtin_cheri_perms_get_7);
        tmp_21 := "i__unops_negb"(tmp_20);
        vtb := "i__bool_of_value"(tmp_21);
        goto [vtb] t6 s6;
    s6: skip;
    t6: retval_i__cheri_offset_get_8 := undefined; (* unsigned long int retval_i__cheri_offset_get_8; *)
        retval_i__cheri_offset_get_8 := "i__cheri_offset_get"(a);
        tmp_22 := "i__unops_cast"("signed long int", retval_i__cheri_offset_get_8);
        tmp_23 := "i__binops_cmp_eq"(tmp_22, {{ "int64", 0i }});
        assert (tmp_23 == {{ "int32", 1i }});
        tmp_24 := "i__unops_cast"("signed long int", retval_i__cheri_offset_get_8);
        tmp_25 := "i__binops_cmp_eq"(tmp_24, {{ "int64", 0i }});
        tmp_26 := "i__unops_negb"(tmp_25);
        vtb := "i__bool_of_value"(tmp_26);
        goto [vtb] t7 s7;
    s7: skip;
    t7: retval_i__cheri_length_get_9 := undefined; (* unsigned long int retval_i__cheri_length_get_9; *)
        retval_i__cheri_length_get_9 := "i__cheri_length_get"(a);
        tmp_27 := "i__binops_cmp_geq"(retval_i__cheri_length_get_9, size);
        assert (tmp_27 == {{ "int32", 1i }});
        tmp_28 := "i__binops_cmp_geq"(retval_i__cheri_length_get_9, size);
        tmp_29 := "i__unops_negb"(tmp_28);
        vtb := "i__bool_of_value"(tmp_29);
        goto [vtb] t8 s8;
    s8: skip;
    t8: tmp_30 := "i__binops_cmp_geq"(size, {{ "uint64", 32i }});
        tmp_31 := "i__unops_negb"(tmp_30);
        vtb := "i__bool_of_value"(tmp_31);
        goto [vtb] t9 s9;
    s9: skip;
        retval_i__cheri_base_get_10 := undefined; (* unsigned long int retval_i__cheri_base_get_10; *)
        retval_i__cheri_base_get_10 := "i__cheri_base_get"(a);
        tmp_32 := "i__binops_sub"({{ "uint64", 32i }}, {{ "uint64", 1i }});
        tmp_33 := "i__binops_bitwiseand"(retval_i__cheri_base_get_10, tmp_32);
        tmp_34 := "i__unops_cast"("signed long int", tmp_33);
        tmp_35 := "i__binops_cmp_eq"(tmp_34, {{ "int64", 0i }});
        assert (tmp_35 == {{ "int32", 1i }});
        tmp_36 := "i__binops_sub"({{ "uint64", 32i }}, {{ "uint64", 1i }});
        tmp_37 := "i__binops_bitwiseand"(retval_i__cheri_base_get_10, tmp_36);
        tmp_38 := "i__unops_cast"("signed long int", tmp_37);
        tmp_39 := "i__binops_cmp_eq"(tmp_38, {{ "int64", 0i }});
        tmp_40 := "i__unops_negb"(tmp_39);
        vtb := "i__bool_of_value"(tmp_40);
        goto [vtb] t9 s9;
    s9: skip;
    t9: skip;
        ret := undefined;
        return
};

(* void ( signed long int ) *)
proc check_size(size) {
        a := undefined; (* void * a; *)
        retval_malloc_1 := undefined; (* void * retval_malloc_1; *)
        tmp_41 := "i__unops_cast"("unsigned long int", size);
        tmp_42 := "i__malloc"(tmp_41);
        retval_malloc_1 := tmp_42;
        a := retval_malloc_1;
        tmp_43 := "i__unops_cast"("unsigned long int", size);
        tmp := "check_allocation"(a, tmp_43);
        b := undefined; (* signed char * b; *)
        retval_calloc_2 := undefined; (* void * retval_calloc_2; *)
        tmp_44 := "i__unops_cast"("unsigned long int", size);
        retval_calloc_2 := "calloc"(tmp_44, {{ "uint64", 1i }});
        tmp_45 := "i__unops_cast"(1i, retval_calloc_2);
        b := tmp_45;
        tmp_46 := "i__unops_cast"(1i, b);
        tmp_47 := "i__unops_cast"("unsigned long int", size);
        tmp := "check_allocation"(tmp_46, tmp_47);
        i := undefined; (* signed int i; *)
        i := {{ "int32", 0i }};
    t1: tmp_48 := "i__unops_cast"("signed long int", i);
        tmp_49 := "i__binops_sub"(size, {{ "int64", 1i }});
        tmp_50 := "i__binops_cmp_lt"(tmp_48, tmp_49);
        tmp_51 := "i__unops_negb"(tmp_50);
        vtb := "i__bool_of_value"(tmp_51);
        goto [vtb] t3 s3;
    s3: skip;
        tmp_52 := "i__unops_cast"("signed long int", i);
        tmp_53 := "i__binops_add"(b, tmp_52);
        tmp_54 := "i__load"(tmp_53, "int8");
        tmp_55 := "i__unops_cast"("signed long int", tmp_54);
        tmp_56 := "i__binops_cmp_eq"(tmp_55, {{ "int64", 0i }});
        assert (tmp_56 == {{ "int32", 1i }});
        tmp_57 := "i__unops_cast"("signed long int", i);
        tmp_58 := "i__binops_add"(b, tmp_57);
        tmp_59 := "i__load"(tmp_58, "int8");
        tmp_60 := "i__unops_cast"("signed long int", tmp_59);
        tmp_61 := "i__binops_cmp_eq"(tmp_60, {{ "int64", 0i }});
        tmp_62 := "i__unops_negb"(tmp_61);
        vtb := "i__bool_of_value"(tmp_62);
        goto [vtb] t2 s2;
    s2: skip;
    t2: tmp_63 := "i__binops_add"(i, {{ "int32", 1i }});
        i := tmp_63;
        goto t1;
    t3: skip;
        a := "i__free"(a);
        b := "i__free"(b);
        ret := undefined;
        return
};

(* signed int (  ) *)
proc main() {
        max := undefined; (* signed int max; *)
        max := {{ "int32", 9i }};
        i := undefined; (* signed int i; *)
        i := {{ "int32", 1i }};
    t1: tmp_65 := "i__binops_cmp_leq"(i, max);
        tmp_66 := "i__unops_negb"(tmp_65);
        vtb := "i__bool_of_value"(tmp_66);
        goto [vtb] t2 s2;
    s2: skip;
        tmp_67 := "i__binops_leftshift"({{ "int32", 1i }}, i);
        tmp_68 := "i__unops_cast"("signed long int", tmp_67);
        tmp := "check_size"(tmp_68);
        tmp_69 := "i__binops_leftshift"({{ "int32", 1i }}, i);
        tmp_70 := "i__binops_add"(tmp_69, {{ "int32", 1i }});
        tmp_71 := "i__unops_cast"("signed long int", tmp_70);
        tmp := "check_size"(tmp_71);
        tmp_72 := "i__binops_add"(i, {{ "int32", 1i }});
        i := tmp_72;
        goto t1;
    t2: skip;
        ret := {{ "int32", 0i }};
        return;
        return
};

(* global-environment-setup *)
proc genv_init() {
        ret := undefined;
        return
};
